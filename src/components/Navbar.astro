---
const currentPath = Astro.url.pathname;
const navItems = [
  { href: '#home', text: 'INICIO' },
  { href: '#sobre-mi', text: 'SOBRE MÍ' },
  { href: '#works', text: 'PROYECTOS' },
  { href: '#blog', text: 'BLOG' },
  { href: '#contacto', text: 'CONTACTO' },
];
---

<nav class="fixed top-0 left-0 w-full z-50 bg-carbon">
  <div class="max-w-7xl mx-auto px-4">
    <div class="flex justify-between items-center h-16">
      <div class="flex-shrink-0">
        <a href="/" class="text-white text-xl font-semibold">Nikolas Barroso</a>
      </div>

      <button id="mobile-menu-button" class="sm:hidden text-gray-300 hover:text-white focus:outline-none">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>

      <!-- Menú desktop -->
      <div class="hidden sm:block ml-auto">
        <div class="flex space-x-8">
          {navItems.map((item) => (
            <a
              href={item.href}
              class={`text-sm font-medium text-gray-300 hover:text-white transition-colors duration-300 py-2 nav-link ${
                currentPath === item.href ? 'active' : ''
              }`}
            >
              {item.text}
            </a>
          ))}
        </div>
      </div>
    </div>

    <!-- Menú móvil -->
    <div id="mobile-menu" class="sm:hidden hidden mt-4 flex flex-col space-y-4">
      {navItems.map((item) => (
        <a
          href={item.href}
          class="bg-transparent text-white border border-primary text-center py-4 rounded-md transition-all duration-300 hover:bg-red-700 hover:text-white hover:border-transparent">
          {item.text}
        </a>
      ))}
    </div>
  </div>
</nav>

<style>
  nav {
    background-color: rgba(35, 35, 35, 0.9);
    backdrop-filter: blur(10px);
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  .nav-link {
    position: relative;
    display: inline-block;
  }
  
  .nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--primary);
    transition: width 0.3s ease;
  }
  
  .nav-link:hover::after,
  .nav-link.active::after {
    width: 100%;
  }
  
  .nav-link.active {
    color: #fff;
  }

  #mobile-menu a {
    background-color: rgba(35, 35, 35, 0.7); /* Fondo oscuro semi-transparente */
    border: 1px solid var(--primary); /* Borde color primario */
    color: white; /* Texto blanco */
    transition: all 0.3s ease;
  }
  
  #mobile-menu a:hover {
    background-color: rgba(255, 0, 0, 0.8); /* Fondo rojo con intensidad baja */
    color: white;
    border: 1px solid transparent; /* El borde desaparece al hacer hover */
  }

  #mobile-menu a:active {
    background-color: rgba(200, 0, 0, 0.9); /* Rojo más oscuro cuando se presiona */
    color: white;
  }

  @media (max-width: 640px) {
    nav {
      background-color: rgba(35, 35, 35, 0.95);
    }
  }
</style>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Cerrar menú al hacer click en un enlace
  const mobileLinks = document.querySelectorAll('#mobile-menu a');
  mobileLinks.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
    });
  });
</script>
